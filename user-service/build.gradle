plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.palantir.docker' version '0.35.0'
	id 'com.palantir.docker-run' version '0.35.0'
	
}

group = 'io.dimo'
version = '0.0.1'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
}

ext {
	set('springCloudVersion', "2022.0.2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
	
	implementation 'io.micrometer:micrometer-observation'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation 'io.micrometer:context-propagation:latest.integration'
	
	implementation("org.springframework.boot:spring-boot-starter-actuator")
	implementation("org.springframework.boot:spring-boot-starter-aop")

    implementation("io.github.resilience4j:resilience4j-spring-boot3")
	implementation("io.github.resilience4j:resilience4j-all")
	implementation("io.github.resilience4j:resilience4j-reactor")
	
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

docker {
    name "dimoynwa/${project.name}:${project.version}"
    copySpec.from("build").into("build")
    
    tag 'latest', 'dimoynwa/${project.name}:${project.version}'
    dockerfile project.file('Dockerfile')
    push true
}

dockerRun {
    name project.name
    image "dimoynwa/${project.name}:${project.version}"
    ports '8022:8022'
    clean true
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "io.github.resilience4j:resilience4j-bom:2.0.2"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
