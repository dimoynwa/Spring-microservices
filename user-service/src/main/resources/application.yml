server:
  port: 8022
  
spring:
  application:
    name: USER-SERVICE
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: 6379

management:
  tracing:
    propagation:
      type: w3c
    enabled: true
    sampling.probability: 1.0

  zipkin.tracing.endpoint: ${ZIPKIN_URL:http://localhost:9411}/api/v2/spans
  
logging.pattern.level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

eureka:
  instance:
    prefer-ip-address: true
    hostname: ${EUREKA_HOSTNAME:eureka-0}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761}/eureka

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowSize: 10
      minimumNumberOfCalls: 5
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 5s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
    shared:
      slidingWindowSize: 100
      permittedNumberOfCallsInHalfOpenState: 30
      waitDurationInOpenState: 1s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
  instances:
    departmentCB:
      baseConfig: default 
            
resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 100
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - org.springframework.web.reactive.function.client.WebClientResponseException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
  instances:
    departmentCB:
      baseConfig: default