plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.palantir.docker' version '0.35.0'
	id 'com.palantir.docker-run' version '0.35.0'
}

group = 'io.dimo'
version = '0.0.1'
sourceCompatibility = '17'

repositories {
	mavenCentral()
	maven { url 'https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates' }
}

ext {
	set('springCloudVersion', "2022.0.2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
	implementation 'org.springframework.cloud:spring-cloud-starter-zipkin:2.2.8.RELEASE'
	
	implementation 'io.micrometer:micrometer-observation'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation 'io.micrometer:context-propagation:latest.integration'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

docker {
    name "dimoynwa/${project.name}:${project.version}"
    copySpec.from("build").into("build")
    
    tag 'latest', 'dimoynwa/${project.name}:${project.version}'
    dockerfile project.file('Dockerfile')
    push true
}

dockerRun {
    name project.name
    image "dimoynwa/${project.name}:${project.version}"
    ports '8888:8888'
    clean true
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
